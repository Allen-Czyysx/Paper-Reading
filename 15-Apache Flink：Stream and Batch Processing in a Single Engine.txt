问题: 当时流处理, 批处理系统普遍被当做2种完全不同的系统, 作者认为2者应在1个系统中实现.

目标: 高度灵活的窗口机制, 能轻松计算出快, 近似的结果, 或慢, 精确的结果.

Flink在流处理引擎之上实现了批处理功能.

实现:
	a) DAG图. producer, consumer之间通过pipelined/blocking intermidiate streams交换数据. 
	b) 一次传输要么buffer装满, 要么等待时间超过阈值. 调整buffer大小和等待时间阈值可以平衡延迟和吞吐.
	c) 容错: 通过在流中插入control event实现snapshot (即checkpoint), 恢复时至多回放2个snapshot之间的数据.
	d) 在算子中维护state.
	e) Window: 算子接收数据后,将数据存在state中, 并通知相关的window新数据的到达; window的计算会根据指定的trigger条件进行 (可触发多次).
	f) Incremental computation: 无需将数据存在state中, 而是直接计算增量地聚合结果.
	g) 批处理: 通过将数据以流的形式"灌"成一个batch, 并允许使用blocking operator, 来轻松地在流处理引擎上实现批处理.
